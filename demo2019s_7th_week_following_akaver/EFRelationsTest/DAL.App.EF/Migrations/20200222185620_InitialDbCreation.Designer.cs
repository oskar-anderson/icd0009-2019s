// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp.Data;

namespace DAL.App.EF.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200222185620_InitialDbCreation")]
    partial class InitialDbCreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.ChildOne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(128) CHARACTER SET utf8mb4")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("ChildOnes");
                });

            modelBuilder.Entity("Domain.ChildThree", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("PrimaryThreeId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(128) CHARACTER SET utf8mb4")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.HasIndex("PrimaryThreeId");

                    b.ToTable("ChildThrees");
                });

            modelBuilder.Entity("Domain.ChildTwo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("PrimaryTwoId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(128) CHARACTER SET utf8mb4")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.HasIndex("PrimaryTwoId")
                        .IsUnique();

                    b.ToTable("ChildTwos");
                });

            modelBuilder.Entity("Domain.PrimaryOne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ChildOneId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(128) CHARACTER SET utf8mb4")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.HasIndex("ChildOneId")
                        .IsUnique();

                    b.ToTable("PrimaryOnes");
                });

            modelBuilder.Entity("Domain.PrimaryThree", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ChildThreeId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(128) CHARACTER SET utf8mb4")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.HasIndex("ChildThreeId");

                    b.ToTable("PrimaryThrees");
                });

            modelBuilder.Entity("Domain.PrimaryTwo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(128) CHARACTER SET utf8mb4")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("PrimaryTwos");
                });

            modelBuilder.Entity("Domain.ChildThree", b =>
                {
                    b.HasOne("Domain.PrimaryThree", "PrimaryThree")
                        .WithMany()
                        .HasForeignKey("PrimaryThreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.ChildTwo", b =>
                {
                    b.HasOne("Domain.PrimaryTwo", "PrimaryTwo")
                        .WithOne("ChildTwo")
                        .HasForeignKey("Domain.ChildTwo", "PrimaryTwoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.PrimaryOne", b =>
                {
                    b.HasOne("Domain.ChildOne", "ChildOne")
                        .WithOne("PrimaryOne")
                        .HasForeignKey("Domain.PrimaryOne", "ChildOneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.PrimaryThree", b =>
                {
                    b.HasOne("Domain.ChildThree", "ChildThree")
                        .WithMany()
                        .HasForeignKey("ChildThreeId");
                });
#pragma warning restore 612, 618
        }
    }
}
